{"version":3,"file":"main.js","sources":["../../src/js/logo/generated/parser.js","../../src/js/logo/interpreter.js","../../src/js/logo/ui.js","../../src/js/logo/index.js","../../src/js/main.js"],"sourcesContent":["/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { program: peg$parseprogram },\n      peg$startRuleFunction  = peg$parseprogram,\n\n      peg$c0 = function(p) { return p == \"\" ? [] : p },\n      peg$c1 = function(name, body) { Env.LogoParser.procDict[name] = body; return [{ cmd: \"proc\", name: name, body: body }]; },\n      peg$c2 = \"def\",\n      peg$c3 = peg$literalExpectation(\"def\", false),\n      peg$c4 = \"ine\",\n      peg$c5 = peg$literalExpectation(\"ine\", false),\n      peg$c6 = function(name) { return name },\n      peg$c7 = function(stmt) { return stmt },\n      peg$c8 = \"end\",\n      peg$c9 = peg$literalExpectation(\"end\", false),\n      peg$c10 = function(name) { return !!Env.LogoParser.procDict[name] },\n      peg$c11 = function(name, com) { return Env.LogoParser.procDict[name] ? { cmd: \"pname\", body: Env.LogoParser.procDict[name] } : null; },\n      peg$c12 = \"repeat\",\n      peg$c13 = peg$literalExpectation(\"repeat\", false),\n      peg$c14 = \"[\",\n      peg$c15 = peg$literalExpectation(\"[\", false),\n      peg$c16 = \"]\",\n      peg$c17 = peg$literalExpectation(\"]\", false),\n      peg$c18 = function(cmd, times, moves, com) { return { cmd: cmd, times: times, moves: moves, com: com }; },\n      peg$c19 = function(cmd, by, com) { return { cmd: cmd, arg: by, com: com }; },\n      peg$c20 = \"forward\",\n      peg$c21 = peg$literalExpectation(\"forward\", false),\n      peg$c22 = \"fd\",\n      peg$c23 = peg$literalExpectation(\"fd\", false),\n      peg$c24 = function() { return \"forward\" },\n      peg$c25 = \"back\",\n      peg$c26 = peg$literalExpectation(\"back\", false),\n      peg$c27 = \"bk\",\n      peg$c28 = peg$literalExpectation(\"bk\", false),\n      peg$c29 = function() { return \"back\" },\n      peg$c30 = \"right\",\n      peg$c31 = peg$literalExpectation(\"right\", false),\n      peg$c32 = \"rt\",\n      peg$c33 = peg$literalExpectation(\"rt\", false),\n      peg$c34 = function() { return \"right\" },\n      peg$c35 = \"left\",\n      peg$c36 = peg$literalExpectation(\"left\", false),\n      peg$c37 = \"lt\",\n      peg$c38 = peg$literalExpectation(\"lt\", false),\n      peg$c39 = function() { return \"left\" },\n      peg$c40 = \"penup\",\n      peg$c41 = peg$literalExpectation(\"penup\", false),\n      peg$c42 = \"pendown\",\n      peg$c43 = peg$literalExpectation(\"pendown\", false),\n      peg$c44 = function(cmd, com) { return { cmd: cmd, com: com }; },\n      peg$c45 = \"color\",\n      peg$c46 = peg$literalExpectation(\"color\", false),\n      peg$c47 = \"clr\",\n      peg$c48 = peg$literalExpectation(\"clr\", false),\n      peg$c49 = function(cmd, to, com) { return [ { cmd: \"color\", arg: to, com: com } ]; },\n      peg$c50 = \"clear\",\n      peg$c51 = peg$literalExpectation(\"clear\", false),\n      peg$c52 = \"cls\",\n      peg$c53 = peg$literalExpectation(\"cls\", false),\n      peg$c54 = function(cmd, com) { return [ { cmd: \"clear\", com: com } ]; },\n      peg$c55 = \"home\",\n      peg$c56 = peg$literalExpectation(\"home\", false),\n      peg$c57 = function(cmd, com) { return { cmd: \"home\", com: com }; },\n      peg$c58 = \"=\",\n      peg$c59 = peg$literalExpectation(\"=\", false),\n      peg$c60 = function(name, val, com) { if (!Env.LogoParser.varDict[name]) Env.LogoParser.varDict[name] = true; return { cmd: \"var\", name: name, exp: (name + \" = \" + val), com: com }; },\n      peg$c61 = \"+\",\n      peg$c62 = peg$literalExpectation(\"+\", false),\n      peg$c63 = function(left, right) { return left + \" + \" + right; },\n      peg$c64 = \"*\",\n      peg$c65 = peg$literalExpectation(\"*\", false),\n      peg$c66 = function(left, right) { return left + \" * \" + right; },\n      peg$c67 = \"(\",\n      peg$c68 = peg$literalExpectation(\"(\", false),\n      peg$c69 = \")\",\n      peg$c70 = peg$literalExpectation(\")\", false),\n      peg$c71 = function(add) { return \"(\" + add + \")\"; },\n      peg$c72 = function(name) { return Env.LogoParser.varDict[name] ? name : null; },\n      peg$c73 = function(name, val, com) { Env.LogoParser.varDict[name] = val; return { cmd: \"var\", val: val, com: com }; },\n      peg$c74 = function(left, right) { return left + right; },\n      peg$c75 = function(left, right) { return left * right; },\n      peg$c76 = function(add) { return add; },\n      peg$c77 = function(name) { return Env.LogoParser.varDict[name] ? Env.LogoParser.varDict[name] : null },\n      peg$c78 = function(com) { return [ { cmd: \"comment\", com: com } ]; },\n      peg$c79 = function(com) { return com || '' },\n      peg$c80 = \";\",\n      peg$c81 = peg$literalExpectation(\";\", false),\n      peg$c82 = function(text) { return text.join(\"\"); },\n      peg$c83 = /^[ ]/,\n      peg$c84 = peg$classExpectation([\" \"], false, false),\n      peg$c85 = /^[a-z]/,\n      peg$c86 = peg$classExpectation([[\"a\", \"z\"]], false, false),\n      peg$c87 = function(chars) { var text = chars.join(\"\"); return Env.LogoParser.reserved.indexOf(text) == -1 ? text : null },\n      peg$c88 = /^[0-9]/,\n      peg$c89 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c90 = function(digits) { return parseInt(digits.join(\"\"), 10); },\n      peg$c91 = function(chars) { return chars.join(\"\"); },\n      peg$c92 = /^[\\n\\r\\u2028\\u2029\\\\\\\\]/,\n      peg$c93 = peg$classExpectation([\"\\n\", \"\\r\", \"\\u2028\", \"\\u2029\", \"\\\\\", \"\\\\\"], false, false),\n      peg$c94 = peg$anyExpectation(),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseprogram() {\n    var s0, s1, s2, s3;\n\n    s0 = [];\n    s1 = peg$currPos;\n    s2 = peg$parseproc();\n    if (s2 === peg$FAILED) {\n      s2 = peg$parsestatement();\n    }\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parseEOL();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s1;\n        s2 = peg$c0(s2);\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = peg$currPos;\n      s2 = peg$parseproc();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parsestatement();\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEOL();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s1;\n          s2 = peg$c0(s2);\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseproc() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parsePSTART();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEOL();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsePBODY();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsePEND();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c1(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePSTART() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c2) {\n      s1 = peg$c2;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c3); }\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 3) === peg$c4) {\n        s2 = peg$c4;\n        peg$currPos += 3;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c5); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseSP();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseALPHA();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c6(s4);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePBODY() {\n    var s0, s1, s2, s3;\n\n    s0 = [];\n    s1 = peg$currPos;\n    s2 = peg$parsestatement();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parseEOL();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s1;\n        s2 = peg$c7(s2);\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$currPos;\n        s2 = peg$parsestatement();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseEOL();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s1;\n            s2 = peg$c7(s2);\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePEND() {\n    var s0;\n\n    if (input.substr(peg$currPos, 3) === peg$c8) {\n      s0 = peg$c8;\n      peg$currPos += 3;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c9); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsePNAME() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseALPHA();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = peg$currPos;\n      s2 = peg$c10(s1);\n      if (s2) {\n        s2 = void 0;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseOPT_SP();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseOPT_COM();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c11(s1, s4);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsestatement() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseMOVE();\n    if (s2 === peg$FAILED) {\n      s2 = peg$parsePEN();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseHOME();\n        if (s2 === peg$FAILED) {\n          s2 = peg$parseRPT();\n        }\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseMOVE();\n        if (s2 === peg$FAILED) {\n          s2 = peg$parsePEN();\n          if (s2 === peg$FAILED) {\n            s2 = peg$parseHOME();\n            if (s2 === peg$FAILED) {\n              s2 = peg$parseRPT();\n            }\n          }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseCOLOR();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseCLEAR();\n        if (s1 === peg$FAILED) {\n          s1 = [];\n          s2 = peg$parsePNAME();\n          if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n              s1.push(s2);\n              s2 = peg$parsePNAME();\n            }\n          } else {\n            s1 = peg$FAILED;\n          }\n          if (s1 === peg$FAILED) {\n            s1 = [];\n            s2 = peg$parsePREVAR();\n            if (s2 !== peg$FAILED) {\n              while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$parsePREVAR();\n              }\n            } else {\n              s1 = peg$FAILED;\n            }\n            if (s1 === peg$FAILED) {\n              s1 = peg$parseCOMMENT();\n            }\n          }\n        }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c7(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseRPT() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c12) {\n      s1 = peg$c12;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c13); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseOPT_SP();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsePRIMARY();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseOPT_SP();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 91) {\n              s5 = peg$c14;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c15); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseOPT_SP();\n              if (s6 !== peg$FAILED) {\n                s7 = [];\n                s8 = peg$parseMOVE();\n                if (s8 === peg$FAILED) {\n                  s8 = peg$parsePEN();\n                  if (s8 === peg$FAILED) {\n                    s8 = peg$parseHOME();\n                    if (s8 === peg$FAILED) {\n                      s8 = peg$parseRPT();\n                      if (s8 === peg$FAILED) {\n                        s8 = peg$parsePREVAR();\n                        if (s8 === peg$FAILED) {\n                          s8 = peg$parsePNAME();\n                        }\n                      }\n                    }\n                  }\n                }\n                if (s8 !== peg$FAILED) {\n                  while (s8 !== peg$FAILED) {\n                    s7.push(s8);\n                    s8 = peg$parseMOVE();\n                    if (s8 === peg$FAILED) {\n                      s8 = peg$parsePEN();\n                      if (s8 === peg$FAILED) {\n                        s8 = peg$parseHOME();\n                        if (s8 === peg$FAILED) {\n                          s8 = peg$parseRPT();\n                          if (s8 === peg$FAILED) {\n                            s8 = peg$parsePREVAR();\n                            if (s8 === peg$FAILED) {\n                              s8 = peg$parsePNAME();\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  s7 = peg$FAILED;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseOPT_SP();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 93) {\n                      s9 = peg$c16;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c17); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parseOPT_SP();\n                      if (s10 !== peg$FAILED) {\n                        s11 = peg$parseOPT_COM();\n                        if (s11 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s1 = peg$c18(s1, s3, s7, s11);\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseMOVE() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseFD();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseBK();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseLT();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseRT();\n        }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseOPT_SP();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsePREPRIMARY();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseOPT_SP();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseOPT_COM();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c19(s1, s3, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFD() {\n    var s0, s1;\n\n    if (input.substr(peg$currPos, 7) === peg$c20) {\n      s0 = peg$c20;\n      peg$currPos += 7;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c21); }\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c22) {\n        s1 = peg$c22;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c23); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c24();\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseBK() {\n    var s0, s1;\n\n    if (input.substr(peg$currPos, 4) === peg$c25) {\n      s0 = peg$c25;\n      peg$currPos += 4;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c27) {\n        s1 = peg$c27;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c29();\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseRT() {\n    var s0, s1;\n\n    if (input.substr(peg$currPos, 5) === peg$c30) {\n      s0 = peg$c30;\n      peg$currPos += 5;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c32) {\n        s1 = peg$c32;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c33); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c34();\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseLT() {\n    var s0, s1;\n\n    if (input.substr(peg$currPos, 4) === peg$c35) {\n      s0 = peg$c35;\n      peg$currPos += 4;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c36); }\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c37) {\n        s1 = peg$c37;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c38); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c39();\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePEN() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c40) {\n      s1 = peg$c40;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c41); }\n    }\n    if (s1 === peg$FAILED) {\n      if (input.substr(peg$currPos, 7) === peg$c42) {\n        s1 = peg$c42;\n        peg$currPos += 7;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c43); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseOPT_SP();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseOPT_COM();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c44(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCOLOR() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c45) {\n      s1 = peg$c45;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c46); }\n    }\n    if (s1 === peg$FAILED) {\n      if (input.substr(peg$currPos, 3) === peg$c47) {\n        s1 = peg$c47;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c48); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseOPT_SP();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsePRIMARY();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseOPT_SP();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseOPT_COM();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c49(s1, s3, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCLEAR() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c50) {\n      s1 = peg$c50;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c51); }\n    }\n    if (s1 === peg$FAILED) {\n      if (input.substr(peg$currPos, 3) === peg$c52) {\n        s1 = peg$c52;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c53); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseOPT_SP();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseOPT_COM();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c54(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseHOME() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c55) {\n      s1 = peg$c55;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c56); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseOPT_SP();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseOPT_COM();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c57(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePREVAR() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseALPHA();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseOPT_SP();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 61) {\n          s3 = peg$c58;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c59); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseOPT_SP();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsePREADD();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseOPT_SP();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseOPT_COM();\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c60(s1, s5, s7);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePREADD() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parsePREMUL();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseOPT_SP();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s3 = peg$c61;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c62); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseOPT_SP();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsePREADD();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c63(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsePREMUL();\n    }\n\n    return s0;\n  }\n\n  function peg$parsePREMUL() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parsePREPRIMARY();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseOPT_SP();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s3 = peg$c64;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c65); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseOPT_SP();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsePREMUL();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c66(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsePREPRIMARY();\n    }\n\n    return s0;\n  }\n\n  function peg$parsePREPRIMARY() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$parseNUM();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsePREVNAME();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s1 = peg$c67;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c68); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseOPT_SP();\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parsePREADD();\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parseOPT_SP();\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s5 = peg$c69;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c70); }\n                }\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c71(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsePREVNAME() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseALPHA();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c72(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseVAR() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseALPHA();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseOPT_SP();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 61) {\n          s3 = peg$c58;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c59); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseOPT_SP();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseADD();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseOPT_SP();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseOPT_COM();\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c73(s1, s5, s7);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseADD() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseMUL();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseOPT_SP();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s3 = peg$c61;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c62); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseOPT_SP();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseADD();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c74(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseMUL();\n    }\n\n    return s0;\n  }\n\n  function peg$parseMUL() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parsePRIMARY();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseOPT_SP();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s3 = peg$c64;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c65); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseOPT_SP();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseMUL();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c75(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsePRIMARY();\n    }\n\n    return s0;\n  }\n\n  function peg$parsePRIMARY() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$parseNUM();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseVNAME();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s1 = peg$c67;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c68); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseOPT_SP();\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseADD();\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parseOPT_SP();\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s5 = peg$c69;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c70); }\n                }\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c76(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseVNAME() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseALPHA();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c77(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseCOMMENT() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseCOM();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c78(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseOPT_COM() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseCOM();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c79(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseCOM() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 59) {\n      s1 = peg$c80;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c81); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseOPT_SP();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parseANY_NOT_EOL();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parseANY_NOT_EOL();\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c82(s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseOPT_SP() {\n    var s0;\n\n    s0 = peg$parseSP();\n    if (s0 === peg$FAILED) {\n      s0 = null;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSP() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c83.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c84); }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c83.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c84); }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseALPHA() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c85.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c86); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c85.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c86); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c87(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseNUM() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c88.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c89); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c88.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c89); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c90(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseANY_NOT_EOL() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$currPos;\n    peg$silentFails++;\n    s3 = peg$parseEOL();\n    peg$silentFails--;\n    if (s3 === peg$FAILED) {\n      s2 = void 0;\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parseANY();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c91(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseEOL() {\n    var s0;\n\n    if (peg$c92.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c93); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseANY() {\n    var s0;\n\n    if (input.length > peg$currPos) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c94); }\n    }\n\n    return s0;\n  }\n\n\n    var Env = {};\n    try {\n      Env = window; \n    } catch(e) { }// fix for test\n\n    Env.LogoParser = Env.LogoParser || {\n      reserved : ('def|define|end|repeat|forward|fd|back|bk|right|rt|left|lt|penup|pendown|color|clr|clear|cls|home'.split('|')),\n      varDict : {},\n      procDict : {}\n    };    \n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","import parser from './generated/parser.js'\n\nvar Interpreter = (function () {\n  var queue = [];\n  var history = [];\n  var procedures = {};\n  var MAX_HISTORY = 10;\n\n  var safeParse = function (text, start) {\n    try {\n      return parser.parse(text, { startRule: start });\n    } catch (e) {\n      throw { name: 'SyntaxError', message: 'Bad syntax. Please check line: ' + e.line + ' column: ' + e.column };\n    }\n  };\n\n  var process = function process(move) {\n    var count, index, procedure;\n    switch (move.cmd) {\n      case 'forward':\n      case 'back':\n      case 'right':\n      case 'left':\n      case 'color':\n        if (isNaN(move.arg)) {\n          move = $.extend(true, {}, move);\n          move.arg = safeParse(move.arg, \"PRIMARY\");\n        }\n      case 'clear':\n      case 'home':\n      case 'penup':\n      case 'pendown':\n        queue.push(move);\n        break;\n      case 'repeat':\n        for (count = 0; count < move.times; count++) {\n          for (index in move.moves) {\n            process(move.moves[index]);\n          }\n        }\n        break;\n      case 'var':\n        safeParse(move.exp, \"VAR\");\n        break;\n      case 'proc':\n        break;\n      case 'pname':\n        procedure = $.extend(true, [], move.body);\n        for (count in procedure) {\n          for (index in procedure[count]) {\n            process(procedure[count][index]);\n          }\n        }\n        break;\n      case 'comment':\n        break;\n      default:\n        throw { name: 'UnknownMove', message: 'Unknown move: ' + move.cmd };\n    }\n  };\n\n  var addToHistory = function (program) {\n    // if present then remove\n    var index = history.indexOf(program);\n    index != -1 && history.splice(index, 1);\n\n    // add to history\n    history.push(program) >= MAX_HISTORY && history.shift();\n  };\n\n  return {\n    interpret: function (program) {\n      var input = [];\n      var i, j, statement, move;\n\n      // update history\n      addToHistory(program);\n\n      // parse the input\n      input = safeParse(program.endsWith(\"\\n\") ? program : program.concat(\"\\n\"), 'program');\n\n      // process the commands\n      for (i in input) {\n        statement = input[i];\n        for (j in statement) {\n          move = statement[j];\n          process(move);\n        }\n      }\n    },\n    next: function () {\n      return queue.length > 0 ? queue.shift() : undefined;\n    },\n    prev: function (n) {\n      var index = history.length - n;\n      return (index >= 0) && history[index];\n    }\n  };\n\n})();\n\nexport default Interpreter;\n","var UI = (function () {\n\n  var config = {\n    TURTLE_HEIGHT: 25,\n    TURTLE_WIDTH: 15,\n    TURTLE_COLOR: 3,\n    SCREEN_ID: 'screen',\n    SCREEN_MPS: 200,\n    COLORS: ['#FFFAF0', 'red', '#FFFF31', '#FFA812', '#1F75FE', 'green', '#FAF0BE', '#964B00', '#36454F', '#7FFF00', '#F7E98E']\n  };\n  var canvas, turtle, color = config.COLORS[config.TURTLE_COLOR];\n\n  var addNewTail = function () {\n    if (!turtle.tailOn) return;\n    turtle.tail = new fabric.Line([turtle.left, turtle.top, turtle.left, turtle.top], {\n      fill: color,\n      strokeWidth: 1,\n      selectable: false\n    });\n    canvas.add(turtle.tail);\n  };\n\n  var moveBy = function (distance) {\n    turtle.set({\n      left: (turtle.left + distance * Math.sin(turtle.angle * Math.PI / 180)),\n      top: (turtle.top - distance * Math.cos(turtle.angle * Math.PI / 180))\n    });\n\n    turtle.tail && turtle.tail.set({ 'x2': turtle.left, 'y2': turtle.top });\n    canvas.renderAll();\n  };\n\n  var turnBy = function (angle) {\n    turtle.setAngle(turtle.angle + angle);\n    canvas.renderAll();\n    addNewTail();\n  };\n\n  var setCanvasSize = function () {\n    canvas.setHeight(window.innerHeight - 230);\n    canvas.setWidth(window.innerWidth - 220);\n\n    var home = {\n      top: Math.floor(canvas.getHeight() / 2 - (config.TURTLE_HEIGHT / 2)),\n      left: Math.floor(canvas.getWidth() / 2 - (config.TURTLE_WIDTH / 2))\n\n    };\n\n    if (turtle) {\n      turtle.home = home;\n    }\n\n    return home;\n  };\n\n\n  return {\n    init: function () {\n      // init the canvas\n      canvas = new fabric.StaticCanvas(config.SCREEN_ID);\n      var home = setCanvasSize();\n\n      // bind the window resize to canvas\n      $(window).resize(setCanvasSize);\n\n      // create the turtle shape\n      turtle = new fabric.Triangle({\n        left: home.left,\n        top: home.top,\n        width: config.TURTLE_WIDTH,\n        height: config.TURTLE_HEIGHT,\n        fill: color,\n        selectable: false\n      });\n\n      // add additional properties\n      turtle.home = home;\n      turtle.tailOn = true;\n\n      // add the objects to the canvas\n      canvas.add(turtle);\n      addNewTail();\n    },\n    forward: function (distance) {\n      moveBy(distance);\n    },\n    back: function (distance) {\n      moveBy(-distance);\n    },\n    right: function (angle) {\n      turnBy(angle);\n    },\n    left: function (angle) {\n      turnBy(-angle);\n    },\n    color: function (index) {\n      if (index > 0 && index <= config.COLORS.length) {\n        color = config.COLORS[index - 1];\n\n        turtle.set({ fill: color });\n        addNewTail();\n        canvas.renderAll();\n      }\n    },\n    clear: function () {\n      canvas.clear();\n      color = config.COLORS[config.TURTLE_COLOR];\n      turtle.set({\n        fill: color,\n        left: turtle.home.left,\n        top: turtle.home.top,\n        angle: 0\n      });\n      turtle.tailOn = true;\n      canvas.add(turtle);\n      addNewTail();\n      canvas.renderAll();\n    },\n    penup: function () {\n      turtle.tailOn = false;\n      turtle.tail = undefined;\n    },\n    pendown: function () {\n      turtle.tailOn = true;\n      addNewTail();\n    },\n    home: function () {\n      this.penup();\n\n      turtle.set({\n        left: turtle.home.left,\n        top: turtle.home.top,\n        angle: 0\n      });\n\n      this.pendown();\n\n      canvas.renderAll();\n    },\n    loop: function (queue) {\n      var self = this;\n\n      var move = queue.next();\n\n      if (move !== undefined) {\n        self[move.cmd].call(self, move.arg);\n      }\n\n      window.setTimeout(function () {\n        self.loop(queue);\n      }, 1000 / config.SCREEN_MPS);\n    }\n  };\n})();\n\nexport default UI;\n","import interpreter from './interpreter'\nimport ui from './ui'\n\nexport default {\n  interpreter,\n  ui\n}","import Logo from './logo'\n\nvar KeyCodes = {\n  ENTER: 13,\n  UP: 38,\n  DOWN: 40,\n  ESC: 27\n};\n\nvar Selector = {\n  field: '#field',\n  button: '#enter',\n  overlay: '#overlay',\n  pane: '.pane',\n  paneContent: '.pane .content',\n  container: '#container',\n  multiline: '.multiline',\n  messenger: '#messenger',\n  tipper: '.tipper',\n  error: '#error',\n  trySample: '#samples .copy'\n};\n\nvar setFieldSize = function () {\n  return $(Selector.field).width(window.innerWidth - 400);\n};\n\nvar toggleMultiline = function () {\n  var $this = $(this);\n  var pos = $this.offset();\n  var height = $this.height();\n\n  if ($this.toggleClass('on').hasClass('on')) {\n    $this.data({ height: height }).css({\n      left: pos.left,\n      bottom: window.innerHeight - (pos.top + height)\n    });\n  }\n};\n\nvar TOOLTIP_DEFAULTS = {\n  style: {\n    tip: {\n      corner: 'left top'\n    },\n    classes: 'ui-tooltip-turtle ui-tooltip-rounded ui-tooltip-shadow'\n  },\n  position: {\n    my: 'top left',\n    at: 'center right',\n    adjust: {\n      x: -5,\n      y: -15\n    },\n    target: $(Selector.messenger)\n  }\n};\n\nvar initTips = function () {\n  $(Selector.tipper).qtip($.extend({}, {\n    content: {\n      attr: 'tip'\n    }\n  }, TOOLTIP_DEFAULTS));\n\n  $(Selector.error).qtip($.extend({}, {\n    content: {\n      text: 'Error!!'\n    },\n    show: {\n      modal: true\n    }\n  }, TOOLTIP_DEFAULTS));\n};\n\nvar error = function (message) {\n  $(Selector.error).qtip('option', 'content.text', message + '<br/>Hit ESC to dismiss.').qtip('show');\n};\n\nvar initMenus = function () {\n  var hidePanes = function () {\n    $.each($(Selector.pane), function (index, item) {\n      $(item).removeClass('active');\n    });\n  };\n\n  $(document).keyup(function (e) {\n    switch (e.which || e.keyCode) {\n      case KeyCodes.ESC:\n        $(Selector.overlay).hide();\n        return false;\n    }\n  });\n\n  $(Selector.overlay).click(function () {\n    $(this).hide();\n  });\n\n  $.each($(Selector.paneContent), function (index, item) {\n    $(item).click(function (e) {\n      e.stopImmediatePropagation();\n    });\n  });\n\n  $(\"#buttons a\").click(function () {\n    var $this = $(this);\n    hidePanes();\n    $($this.attr('href')).addClass('active');\n    $(Selector.overlay).show();\n  });\n\n  $.each($(Selector.trySample), function (i, item) {\n    $(item).click(function () {\n      !$(Selector.multiline).is('.on') && $(Selector.multiline).click();\n      $(Selector.field).val($(this).parent().next('.code').text());\n      $(Selector.overlay).hide();\n    });\n  });\n};\n\n$(document).ready(function () {\n  var current = 0;\n\n  // init the canvas\n  Logo.ui.init();\n\n  // field operations\n  setFieldSize().keydown(function (e) { // wire the field key shortcuts\n    var prev;\n    var shortcut = !$(Selector.multiline).hasClass('on') || e.ctrlKey;\n    switch (e.which || e.keyCode) {\n      case KeyCodes.ENTER:\n        if (shortcut) {\n          $(Selector.button).trigger('click');\n          return false;\n        }\n        return true;\n      case KeyCodes.UP:\n        if (e.altKey) {\n          $(Selector.multiline).trigger('click');\n          return false;\n        } else if (shortcut) {\n          prev = Logo.interpreter.prev(++current);\n          prev && $(Selector.field).val(prev) || --current;\n          return false;\n        }\n        return true;\n      case KeyCodes.DOWN:\n        if (e.altKey) {\n          $(Selector.multiline).trigger('click');\n          return false;\n        } else if (shortcut) {\n          prev = Logo.interpreter.prev(--current);\n          prev && $(Selector.field).val(prev) || ++current;\n          return false;\n        }\n        return true;\n      default: return true;\n    }\n  })\n    .bind({\n      'click': function (e) { // stop propagation of event\n        e.stopImmediatePropagation();\n      },\n      'focus': function (e) {\n        $(Selector.multiline).addClass('focus');\n      },\n      'blur': function (e) {\n        $(Selector.multiline).removeClass('focus');\n      }\n    });\n\n  $(window).resize(setFieldSize);\n\n  // wire the multiline widget\n  $(Selector.multiline).bind('click', toggleMultiline);\n\n  // wire the button\n  $(Selector.button).bind('click', function () {\n    try {\n      $(Selector.field).val() != '' && Logo.interpreter.interpret($(Selector.field).val().toLowerCase());\n\n      // resets\n      $(Selector.field).val(\"\");\n      current = 0;\n    } catch (e) {\n      error(e.message);\n    }\n  });\n\n  // start the draw loop\n  Logo.ui.loop(Logo.interpreter);\n\n  // initiate the tips\n  initTips();\n\n  // init the menus\n  initMenus();\n\n\n  // finally show the canvas and hide the splash screen\n  setTimeout(function () {\n    $(Selector.container).show();\n    $(Selector.overlay).hide();\n  }, 200);\n});\n"],"names":["peg$SyntaxError","message","expected","found","location","this","name","Error","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","class","i","escapedParts","parts","length","Array","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","j","descriptions","type","sort","slice","join","describeExpected","describeFound","queue","history","safeParse","process","canvas","turtle","config","color","addNewTail","moveBy","turnBy","setCanvasSize","SyntaxError","parse","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","program","peg$parseprogram","peg$startRuleFunction","peg$c0","p","peg$c1","body","Env","LogoParser","procDict","cmd","peg$c2","peg$c3","peg$literalExpectation","peg$c4","peg$c5","peg$c6","peg$c7","stmt","peg$c8","peg$c9","peg$c10","peg$c11","com","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","times","moves","peg$c19","by","arg","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","to","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","val","varDict","exp","peg$c61","peg$c62","peg$c63","left","right","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$c71","add","peg$c72","peg$c74","peg$c75","peg$c76","peg$c77","peg$c78","peg$c79","peg$c80","peg$c81","peg$c82","peg$c83","peg$c84","peg$classExpectation","peg$c85","peg$c86","peg$c87","chars","reserved","indexOf","peg$c88","peg$c89","peg$c90","digits","parseInt","peg$c91","peg$c92","peg$c93","peg$c94","peg$currPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","ignoreCase","peg$computePosDetails","pos","details","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","start","offset","peg$fail","push","s0","s1","s2","peg$parseproc","peg$parsestatement","peg$parseEOL","s3","s4","substr","peg$parseSP","peg$parseALPHA","peg$parsePSTART","peg$parsePBODY","peg$parsePEND","peg$parsePNAME","peg$parseOPT_SP","peg$parseOPT_COM","peg$parseMOVE","peg$parsePEN","peg$parseHOME","peg$parseRPT","s5","peg$parsePRIMARY","peg$parseCOLOR","peg$parseCLEAR","peg$parsePREVAR","peg$parseCOM","peg$parseCOMMENT","s7","s8","s9","s11","peg$parseFD","peg$parseBK","peg$parseLT","peg$parseRT","peg$parsePREPRIMARY","peg$parsePREADD","peg$parsePREMUL","peg$parseNUM","peg$parsePREVNAME","peg$parseMUL","peg$parseVNAME","peg$parseADD","peg$parseANY_NOT_EOL","test","charAt","peg$parseANY","window","e","split","parser","move","count","index","procedure","isNaN","$","extend","interpret","statement","splice","shift","addToHistory","endsWith","concat","next","undefined","prev","n","TURTLE_HEIGHT","TURTLE_WIDTH","TURTLE_COLOR","SCREEN_ID","SCREEN_MPS","COLORS","tailOn","tail","fabric","Line","top","fill","strokeWidth","selectable","distance","set","Math","sin","angle","PI","cos","x2","y2","renderAll","setAngle","setHeight","innerHeight","setWidth","innerWidth","home","floor","getHeight","getWidth","init","StaticCanvas","resize","Triangle","width","height","forward","back","clear","penup","pendown","loop","self","call","setTimeout","KeyCodes","Selector","setFieldSize","toggleMultiline","$this","toggleClass","hasClass","data","css","bottom","TOOLTIP_DEFAULTS","style","tip","corner","classes","position","my","at","adjust","x","y","target","initMenus","document","keyup","which","keyCode","hide","click","each","item","stopImmediatePropagation","removeClass","attr","addClass","show","is","ready","current","Logo","ui","keydown","shortcut","ctrlKey","trigger","altKey","interpreter","bind","focus","blur","toLowerCase","qtip","content","modal"],"mappings":"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"}